@model Connecting.Models.TurnoverBox0

@{
    ViewBag.Title = "Edit";
}
<div class="modal fade" id="defaultModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="defaultModalLabel">QR Code Scan</h4>
            </div>
            <div class="modal-body">
                Please scan the QRcode for updating
                <video autoplay style="width:100%; height:100%; object-fit: fill"></video>
            </div>
            <div class="modal-footer">
                <button id="scan" type="button" class="btn btn-link waves-effect">Scan</button>
            </div>
        </div>
    </div>
</div>


<div class="row clearfix">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="header">
                <div class="row clearfix">
                    <div class="col-xs-12 col-sm-6">
                        <font size="4">  Turnoverboxes</font>&nbsp;&nbsp;&nbsp;&nbsp; 
                    </div>
                </div>
            </div>
            <div>
                <div class="body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Turnoverbox_id) 

                        <div class="form-line">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input class="form-control text-box single-line" id="Humidity" name="Humidity" type="text" value="" />
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-line">
                            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-line">
                            @Html.LabelFor(model => model.Enduser, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Enduser, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Enduser, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-line">
                            @Html.LabelFor(model => model.Pallet_id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input class="form-control text-box single-line" id="Pallet_id" name="Pallet_id" type="text" />
                                @Html.ValidationMessageFor(model => model.Pallet_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-line">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                    }
                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

